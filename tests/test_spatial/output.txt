@__njit
def spatial_M0__Geo0(time, states, parameters):
	#States
	H = states[0: 100]
	A = states[100: 200]
	B = states[200: 300]
	C = states[300: 400]

	#Parameters
	k_synH = parameters[0]
	k_synB = parameters[1]
	k_synH_A = parameters[2]
	J_H_x = parameters[3]
	J_H_y = parameters[4]
	J_A_x = parameters[5]
	J_A_y = parameters[6]
	J_B_x = parameters[7]
	J_B_y = parameters[8]
	F_H_x = parameters[9]
	F_H_y = parameters[10]
	F_A_x = parameters[11]
	F_A_y = parameters[12]
	F_B_x = parameters[13]
	F_B_y = parameters[14]

	#Functions
	def func0(x, k):
		return -x*k

	#Variables
	vrb0 = func0(k_synH, C)
	vrb1 = 1

	#Bulk reactions
	synH = k_synH*C

	#Rates
	_d_C = vrb0

	#Advection
	_adv_H = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		-H[55]*F_H_x*0.5 -H[55]*F_H_y*0.5, #(4.75, 4.25)
		+H[55]*F_H_x*0.5 -H[56]*F_H_y*0.5, #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		-H[62]*F_H_x*0.5 -H[62]*F_H_y*0.5, #(4.25, 4.75)
		+H[55]*F_H_y*0.5 +H[62]*F_H_x*0.5 -H[63]*F_H_x*0.5 -H[63]*F_H_y*0.5, #(4.75, 4.75)
		+H[56]*F_H_y*0.5 +H[63]*F_H_x*0.5 -H[64]*F_H_x*0.5 -H[64]*F_H_y*0.5, #(5.25, 4.75)
		+H[64]*F_H_x*0.5 -H[65]*F_H_y*0.5, #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		+H[62]*F_H_y*0.5 -H[70]*F_H_x*0.5, #(4.25, 5.25)
		+H[63]*F_H_y*0.5 +H[70]*F_H_x*0.5 -H[71]*F_H_x*0.5 -H[71]*F_H_y*0.5, #(4.75, 5.25)
		+H[64]*F_H_y*0.5 +H[71]*F_H_x*0.5 -H[72]*F_H_x*0.5 -H[72]*F_H_y*0.5, #(5.25, 5.25)
		+H[65]*F_H_y*0.5 +H[72]*F_H_x*0.5, #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		+H[71]*F_H_y*0.5 -H[79]*F_H_x*0.5, #(4.75, 5.75)
		+H[72]*F_H_y*0.5 +H[79]*F_H_x*0.5, #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_adv_A = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		-A[55]*F_A_x*0.5 -A[55]*F_A_y*0.5, #(4.75, 4.25)
		+A[55]*F_A_x*0.5 -A[56]*F_A_y*0.5, #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		-A[62]*F_A_x*0.5 -A[62]*F_A_y*0.5, #(4.25, 4.75)
		+A[55]*F_A_y*0.5 +A[62]*F_A_x*0.5 -A[63]*F_A_x*0.5 -A[63]*F_A_y*0.5, #(4.75, 4.75)
		+A[56]*F_A_y*0.5 +A[63]*F_A_x*0.5 -A[64]*F_A_x*0.5 -A[64]*F_A_y*0.5, #(5.25, 4.75)
		+A[64]*F_A_x*0.5 -A[65]*F_A_y*0.5, #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		+A[62]*F_A_y*0.5 -A[70]*F_A_x*0.5, #(4.25, 5.25)
		+A[63]*F_A_y*0.5 +A[70]*F_A_x*0.5 -A[71]*F_A_x*0.5 -A[71]*F_A_y*0.5, #(4.75, 5.25)
		+A[64]*F_A_y*0.5 +A[71]*F_A_x*0.5 -A[72]*F_A_x*0.5 -A[72]*F_A_y*0.5, #(5.25, 5.25)
		+A[65]*F_A_y*0.5 +A[72]*F_A_x*0.5, #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		+A[71]*F_A_y*0.5 -A[79]*F_A_x*0.5, #(4.75, 5.75)
		+A[72]*F_A_y*0.5 +A[79]*F_A_x*0.5, #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_adv_B = __np.array([
		-B[0]*F_B_x*2 -B[0]*F_B_y*2, #(1.0, 1.0)
		+B[0]*F_B_x*2 -B[1]*F_B_x*2 -B[1]*F_B_y*1 -B[1]*F_B_y*1, #(3.0, 1.0)
		+B[1]*F_B_x*2 -B[2]*F_B_x*2 -B[2]*F_B_y*1 -B[2]*F_B_y*1, #(5.0, 1.0)
		+B[2]*F_B_x*2 -B[3]*F_B_x*2 -B[3]*F_B_y*1 -B[3]*F_B_y*1, #(7.0, 1.0)
		+B[3]*F_B_x*2 -B[4]*F_B_y*2, #(9.0, 1.0)
		+B[0]*F_B_y*2 -B[5]*F_B_x*1 -B[5]*F_B_x*1 -B[5]*F_B_y*2, #(1.0, 3.0)
		+B[4]*F_B_y*2 +B[21]*F_B_x*1 +B[23]*F_B_x*1 -B[6]*F_B_y*2, #(9.0, 3.0)
		+B[5]*F_B_y*2 -B[7]*F_B_x*1 -B[7]*F_B_x*1 -B[7]*F_B_y*2, #(1.0, 5.0)
		+B[6]*F_B_y*2 +B[25]*F_B_x*1 +B[27]*F_B_x*1 -B[8]*F_B_y*2, #(9.0, 5.0)
		+B[7]*F_B_y*2 -B[9]*F_B_x*1 -B[9]*F_B_x*1 -B[9]*F_B_y*2, #(1.0, 7.0)
		+B[8]*F_B_y*2 +B[29]*F_B_x*1 +B[35]*F_B_x*1 -B[10]*F_B_y*2, #(9.0, 7.0)
		+B[9]*F_B_y*2 -B[11]*F_B_x*2, #(1.0, 9.0)
		+B[30]*F_B_y*1 +B[31]*F_B_y*1 +B[11]*F_B_x*2 -B[12]*F_B_x*2, #(3.0, 9.0)
		+B[32]*F_B_y*1 +B[33]*F_B_y*1 +B[12]*F_B_x*2 -B[13]*F_B_x*2, #(5.0, 9.0)
		+B[34]*F_B_y*1 +B[35]*F_B_y*1 +B[13]*F_B_x*2 -B[14]*F_B_x*2, #(7.0, 9.0)
		+B[10]*F_B_y*2 +B[14]*F_B_x*2, #(9.0, 9.0)
		+B[1]*F_B_y*1 +B[5]*F_B_x*1 -B[16]*F_B_x*1 -B[16]*F_B_y*1, #(2.5, 2.5)
		+B[1]*F_B_y*1 +B[16]*F_B_x*1 -B[17]*F_B_x*1 -B[17]*F_B_y*0.5 -B[17]*F_B_y*0.5, #(3.5, 2.5)
		+B[2]*F_B_y*1 +B[17]*F_B_x*1 -B[18]*F_B_x*1 -B[18]*F_B_y*0.5 -B[18]*F_B_y*0.5, #(4.5, 2.5)
		+B[2]*F_B_y*1 +B[18]*F_B_x*1 -B[19]*F_B_x*1 -B[19]*F_B_y*0.5 -B[19]*F_B_y*0.5, #(5.5, 2.5)
		+B[3]*F_B_y*1 +B[19]*F_B_x*1 -B[20]*F_B_x*1 -B[20]*F_B_y*0.5 -B[20]*F_B_y*0.5, #(6.5, 2.5)
		+B[3]*F_B_y*1 +B[20]*F_B_x*1 -B[21]*F_B_x*1 -B[21]*F_B_y*1, #(7.5, 2.5)
		+B[16]*F_B_y*1 +B[5]*F_B_x*1 -B[22]*F_B_x*0.5 -B[22]*F_B_x*0.5 -B[22]*F_B_y*1, #(2.5, 3.5)
		+B[21]*F_B_y*1 +B[43]*F_B_x*0.5 +B[51]*F_B_x*0.5 -B[23]*F_B_x*1 -B[23]*F_B_y*1, #(7.5, 3.5)
		+B[22]*F_B_y*1 +B[7]*F_B_x*1 -B[24]*F_B_x*0.5 -B[24]*F_B_x*0.5 -B[24]*F_B_y*1, #(2.5, 4.5)
		+B[23]*F_B_y*1 +B[59]*F_B_x*0.5 +B[67]*F_B_x*0.5 -B[25]*F_B_x*1 -B[25]*F_B_y*1, #(7.5, 4.5)
		+B[24]*F_B_y*1 +B[7]*F_B_x*1 -B[26]*F_B_x*0.5 -B[26]*F_B_x*0.5 -B[26]*F_B_y*1, #(2.5, 5.5)
		+B[25]*F_B_y*1 +B[75]*F_B_x*0.5 +B[83]*F_B_x*0.5 -B[27]*F_B_x*1 -B[27]*F_B_y*1, #(7.5, 5.5)
		+B[26]*F_B_y*1 +B[9]*F_B_x*1 -B[28]*F_B_x*0.5 -B[28]*F_B_x*0.5 -B[28]*F_B_y*1, #(2.5, 6.5)
		+B[27]*F_B_y*1 +B[91]*F_B_x*0.5 +B[99]*F_B_x*0.5 -B[29]*F_B_x*1 -B[29]*F_B_y*1, #(7.5, 6.5)
		+B[28]*F_B_y*1 +B[9]*F_B_x*1 -B[30]*F_B_x*1 -B[30]*F_B_y*1, #(2.5, 7.5)
		+B[92]*F_B_y*0.5 +B[93]*F_B_y*0.5 +B[30]*F_B_x*1 -B[31]*F_B_x*1 -B[31]*F_B_y*1, #(3.5, 7.5)
		+B[94]*F_B_y*0.5 +B[95]*F_B_y*0.5 +B[31]*F_B_x*1 -B[32]*F_B_x*1 -B[32]*F_B_y*1, #(4.5, 7.5)
		+B[96]*F_B_y*0.5 +B[97]*F_B_y*0.5 +B[32]*F_B_x*1 -B[33]*F_B_x*1 -B[33]*F_B_y*1, #(5.5, 7.5)
		+B[98]*F_B_y*0.5 +B[99]*F_B_y*0.5 +B[33]*F_B_x*1 -B[34]*F_B_x*1 -B[34]*F_B_y*1, #(6.5, 7.5)
		+B[29]*F_B_y*1 +B[34]*F_B_x*1 -B[35]*F_B_x*1 -B[35]*F_B_y*1, #(7.5, 7.5)
		+B[17]*F_B_y*0.5 +B[22]*F_B_x*0.5 -B[36]*F_B_x*0.5 -B[36]*F_B_y*0.5, #(3.25, 3.25)
		+B[17]*F_B_y*0.5 +B[36]*F_B_x*0.5 -B[37]*F_B_x*0.5 -B[37]*F_B_y*0.5, #(3.75, 3.25)
		+B[18]*F_B_y*0.5 +B[37]*F_B_x*0.5 -B[38]*F_B_x*0.5 -B[38]*F_B_y*0.5, #(4.25, 3.25)
		+B[18]*F_B_y*0.5 +B[38]*F_B_x*0.5 -B[39]*F_B_x*0.5 -B[39]*F_B_y*0.5, #(4.75, 3.25)
		+B[19]*F_B_y*0.5 +B[39]*F_B_x*0.5 -B[40]*F_B_x*0.5 -B[40]*F_B_y*0.5, #(5.25, 3.25)
		+B[19]*F_B_y*0.5 +B[40]*F_B_x*0.5 -B[41]*F_B_x*0.5 -B[41]*F_B_y*0.5, #(5.75, 3.25)
		+B[20]*F_B_y*0.5 +B[41]*F_B_x*0.5 -B[42]*F_B_x*0.5 -B[42]*F_B_y*0.5, #(6.25, 3.25)
		+B[20]*F_B_y*0.5 +B[42]*F_B_x*0.5 -B[43]*F_B_x*0.5 -B[43]*F_B_y*0.5, #(6.75, 3.25)
		+B[36]*F_B_y*0.5 +B[22]*F_B_x*0.5 -B[44]*F_B_x*0.5 -B[44]*F_B_y*0.5, #(3.25, 3.75)
		+B[37]*F_B_y*0.5 +B[44]*F_B_x*0.5 -B[45]*F_B_x*0.5 -B[45]*F_B_y*0.5, #(3.75, 3.75)
		+B[38]*F_B_y*0.5 +B[45]*F_B_x*0.5 -B[46]*F_B_x*0.5 -B[46]*F_B_y*0.5, #(4.25, 3.75)
		+B[39]*F_B_y*0.5 +B[46]*F_B_x*0.5 -B[47]*F_B_x*0.5, #(4.75, 3.75)
		+B[40]*F_B_y*0.5 +B[47]*F_B_x*0.5 -B[48]*F_B_x*0.5, #(5.25, 3.75)
		+B[41]*F_B_y*0.5 +B[48]*F_B_x*0.5 -B[49]*F_B_x*0.5 -B[49]*F_B_y*0.5, #(5.75, 3.75)
		+B[42]*F_B_y*0.5 +B[49]*F_B_x*0.5 -B[50]*F_B_x*0.5 -B[50]*F_B_y*0.5, #(6.25, 3.75)
		+B[43]*F_B_y*0.5 +B[50]*F_B_x*0.5 -B[51]*F_B_x*0.5 -B[51]*F_B_y*0.5, #(6.75, 3.75)
		+B[44]*F_B_y*0.5 +B[24]*F_B_x*0.5 -B[52]*F_B_x*0.5 -B[52]*F_B_y*0.5, #(3.25, 4.25)
		+B[45]*F_B_y*0.5 +B[52]*F_B_x*0.5 -B[53]*F_B_x*0.5 -B[53]*F_B_y*0.5, #(3.75, 4.25)
		+B[46]*F_B_y*0.5 +B[53]*F_B_x*0.5, #(4.25, 4.25)
		0, #(4.75, 4.25)
		0, #(5.25, 4.25)
		+B[49]*F_B_y*0.5 -B[57]*F_B_x*0.5, #(5.75, 4.25)
		+B[50]*F_B_y*0.5 +B[57]*F_B_x*0.5 -B[58]*F_B_x*0.5 -B[58]*F_B_y*0.5, #(6.25, 4.25)
		+B[51]*F_B_y*0.5 +B[58]*F_B_x*0.5 -B[59]*F_B_x*0.5 -B[59]*F_B_y*0.5, #(6.75, 4.25)
		+B[52]*F_B_y*0.5 +B[24]*F_B_x*0.5 -B[60]*F_B_x*0.5 -B[60]*F_B_y*0.5, #(3.25, 4.75)
		+B[53]*F_B_y*0.5 +B[60]*F_B_x*0.5 -B[61]*F_B_y*0.5, #(3.75, 4.75)
		0, #(4.25, 4.75)
		0, #(4.75, 4.75)
		0, #(5.25, 4.75)
		0, #(5.75, 4.75)
		+B[58]*F_B_y*0.5 -B[66]*F_B_x*0.5 -B[66]*F_B_y*0.5, #(6.25, 4.75)
		+B[59]*F_B_y*0.5 +B[66]*F_B_x*0.5 -B[67]*F_B_x*0.5 -B[67]*F_B_y*0.5, #(6.75, 4.75)
		+B[60]*F_B_y*0.5 +B[26]*F_B_x*0.5 -B[68]*F_B_x*0.5 -B[68]*F_B_y*0.5, #(3.25, 5.25)
		+B[61]*F_B_y*0.5 +B[68]*F_B_x*0.5 -B[69]*F_B_y*0.5, #(3.75, 5.25)
		0, #(4.25, 5.25)
		0, #(4.75, 5.25)
		0, #(5.25, 5.25)
		0, #(5.75, 5.25)
		+B[66]*F_B_y*0.5 -B[74]*F_B_x*0.5 -B[74]*F_B_y*0.5, #(6.25, 5.25)
		+B[67]*F_B_y*0.5 +B[74]*F_B_x*0.5 -B[75]*F_B_x*0.5 -B[75]*F_B_y*0.5, #(6.75, 5.25)
		+B[68]*F_B_y*0.5 +B[26]*F_B_x*0.5 -B[76]*F_B_x*0.5 -B[76]*F_B_y*0.5, #(3.25, 5.75)
		+B[69]*F_B_y*0.5 +B[76]*F_B_x*0.5 -B[77]*F_B_x*0.5 -B[77]*F_B_y*0.5, #(3.75, 5.75)
		+B[77]*F_B_x*0.5 -B[78]*F_B_y*0.5, #(4.25, 5.75)
		0, #(4.75, 5.75)
		0, #(5.25, 5.75)
		-B[81]*F_B_x*0.5 -B[81]*F_B_y*0.5, #(5.75, 5.75)
		+B[74]*F_B_y*0.5 +B[81]*F_B_x*0.5 -B[82]*F_B_x*0.5 -B[82]*F_B_y*0.5, #(6.25, 5.75)
		+B[75]*F_B_y*0.5 +B[82]*F_B_x*0.5 -B[83]*F_B_x*0.5 -B[83]*F_B_y*0.5, #(6.75, 5.75)
		+B[76]*F_B_y*0.5 +B[28]*F_B_x*0.5 -B[84]*F_B_x*0.5 -B[84]*F_B_y*0.5, #(3.25, 6.25)
		+B[77]*F_B_y*0.5 +B[84]*F_B_x*0.5 -B[85]*F_B_x*0.5 -B[85]*F_B_y*0.5, #(3.75, 6.25)
		+B[78]*F_B_y*0.5 +B[85]*F_B_x*0.5 -B[86]*F_B_x*0.5 -B[86]*F_B_y*0.5, #(4.25, 6.25)
		+B[86]*F_B_x*0.5 -B[87]*F_B_x*0.5 -B[87]*F_B_y*0.5, #(4.75, 6.25)
		+B[87]*F_B_x*0.5 -B[88]*F_B_x*0.5 -B[88]*F_B_y*0.5, #(5.25, 6.25)
		+B[81]*F_B_y*0.5 +B[88]*F_B_x*0.5 -B[89]*F_B_x*0.5 -B[89]*F_B_y*0.5, #(5.75, 6.25)
		+B[82]*F_B_y*0.5 +B[89]*F_B_x*0.5 -B[90]*F_B_x*0.5 -B[90]*F_B_y*0.5, #(6.25, 6.25)
		+B[83]*F_B_y*0.5 +B[90]*F_B_x*0.5 -B[91]*F_B_x*0.5 -B[91]*F_B_y*0.5, #(6.75, 6.25)
		+B[84]*F_B_y*0.5 +B[28]*F_B_x*0.5 -B[92]*F_B_x*0.5 -B[92]*F_B_y*0.5, #(3.25, 6.75)
		+B[85]*F_B_y*0.5 +B[92]*F_B_x*0.5 -B[93]*F_B_x*0.5 -B[93]*F_B_y*0.5, #(3.75, 6.75)
		+B[86]*F_B_y*0.5 +B[93]*F_B_x*0.5 -B[94]*F_B_x*0.5 -B[94]*F_B_y*0.5, #(4.25, 6.75)
		+B[87]*F_B_y*0.5 +B[94]*F_B_x*0.5 -B[95]*F_B_x*0.5 -B[95]*F_B_y*0.5, #(4.75, 6.75)
		+B[88]*F_B_y*0.5 +B[95]*F_B_x*0.5 -B[96]*F_B_x*0.5 -B[96]*F_B_y*0.5, #(5.25, 6.75)
		+B[89]*F_B_y*0.5 +B[96]*F_B_x*0.5 -B[97]*F_B_x*0.5 -B[97]*F_B_y*0.5, #(5.75, 6.75)
		+B[90]*F_B_y*0.5 +B[97]*F_B_x*0.5 -B[98]*F_B_x*0.5 -B[98]*F_B_y*0.5, #(6.25, 6.75)
		+B[91]*F_B_y*0.5 +B[98]*F_B_x*0.5 -B[99]*F_B_x*0.5 -B[99]*F_B_y*0.5, #(6.75, 6.75)
		])


	#Diffusion
	_dfn_H = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		+J_H_x*(H[56] - H[55])/0.5*0.5 +J_H_y*(H[63] - H[55])/0.5*0.5, #(4.75, 4.25)
		+J_H_x*(H[55] - H[56])/0.5*0.5 +J_H_y*(H[64] - H[56])/0.5*0.5, #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		+J_H_x*(H[63] - H[62])/0.5*0.5 +J_H_y*(H[70] - H[62])/0.5*0.5, #(4.25, 4.75)
		+J_H_y*(H[55] - H[63])/0.5*0.5 +J_H_x*(H[62] - H[63])/0.5*0.5 +J_H_x*(H[64] - H[63])/0.5*0.5 +J_H_y*(H[71] - H[63])/0.5*0.5, #(4.75, 4.75)
		+J_H_y*(H[56] - H[64])/0.5*0.5 +J_H_x*(H[63] - H[64])/0.5*0.5 +J_H_x*(H[65] - H[64])/0.5*0.5 +J_H_y*(H[72] - H[64])/0.5*0.5, #(5.25, 4.75)
		+J_H_x*(H[64] - H[65])/0.5*0.5 +J_H_y*(H[73] - H[65])/0.5*0.5, #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		+J_H_y*(H[62] - H[70])/0.5*0.5 +J_H_x*(H[71] - H[70])/0.5*0.5, #(4.25, 5.25)
		+J_H_y*(H[63] - H[71])/0.5*0.5 +J_H_x*(H[70] - H[71])/0.5*0.5 +J_H_x*(H[72] - H[71])/0.5*0.5 +J_H_y*(H[79] - H[71])/0.5*0.5, #(4.75, 5.25)
		+J_H_y*(H[64] - H[72])/0.5*0.5 +J_H_x*(H[71] - H[72])/0.5*0.5 +J_H_x*(H[73] - H[72])/0.5*0.5 +J_H_y*(H[80] - H[72])/0.5*0.5, #(5.25, 5.25)
		+J_H_y*(H[65] - H[73])/0.5*0.5 +J_H_x*(H[72] - H[73])/0.5*0.5, #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		+J_H_y*(H[71] - H[79])/0.5*0.5 +J_H_x*(H[80] - H[79])/0.5*0.5, #(4.75, 5.75)
		+J_H_y*(H[72] - H[80])/0.5*0.5 +J_H_x*(H[79] - H[80])/0.5*0.5, #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_dfn_A = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		+J_A_x*(A[56] - A[55])/0.5*0.5 +J_A_y*(A[63] - A[55])/0.5*0.5, #(4.75, 4.25)
		+J_A_x*(A[55] - A[56])/0.5*0.5 +J_A_y*(A[64] - A[56])/0.5*0.5, #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		+J_A_x*(A[63] - A[62])/0.5*0.5 +J_A_y*(A[70] - A[62])/0.5*0.5, #(4.25, 4.75)
		+J_A_y*(A[55] - A[63])/0.5*0.5 +J_A_x*(A[62] - A[63])/0.5*0.5 +J_A_x*(A[64] - A[63])/0.5*0.5 +J_A_y*(A[71] - A[63])/0.5*0.5, #(4.75, 4.75)
		+J_A_y*(A[56] - A[64])/0.5*0.5 +J_A_x*(A[63] - A[64])/0.5*0.5 +J_A_x*(A[65] - A[64])/0.5*0.5 +J_A_y*(A[72] - A[64])/0.5*0.5, #(5.25, 4.75)
		+J_A_x*(A[64] - A[65])/0.5*0.5 +J_A_y*(A[73] - A[65])/0.5*0.5, #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		+J_A_y*(A[62] - A[70])/0.5*0.5 +J_A_x*(A[71] - A[70])/0.5*0.5, #(4.25, 5.25)
		+J_A_y*(A[63] - A[71])/0.5*0.5 +J_A_x*(A[70] - A[71])/0.5*0.5 +J_A_x*(A[72] - A[71])/0.5*0.5 +J_A_y*(A[79] - A[71])/0.5*0.5, #(4.75, 5.25)
		+J_A_y*(A[64] - A[72])/0.5*0.5 +J_A_x*(A[71] - A[72])/0.5*0.5 +J_A_x*(A[73] - A[72])/0.5*0.5 +J_A_y*(A[80] - A[72])/0.5*0.5, #(5.25, 5.25)
		+J_A_y*(A[65] - A[73])/0.5*0.5 +J_A_x*(A[72] - A[73])/0.5*0.5, #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		+J_A_y*(A[71] - A[79])/0.5*0.5 +J_A_x*(A[80] - A[79])/0.5*0.5, #(4.75, 5.75)
		+J_A_y*(A[72] - A[80])/0.5*0.5 +J_A_x*(A[79] - A[80])/0.5*0.5, #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_dfn_B = __np.array([
		+J_B_x*(B[1] - B[0])/2.0*2 +J_B_y*(B[5] - B[0])/2.0*2, #(1.0, 1.0)
		+J_B_x*(B[0] - B[1])/2.0*2 +J_B_x*(B[2] - B[1])/2.0*2 +J_B_y*(B[16] - B[1])/1.5*1 +J_B_y*(B[17] - B[1])/1.5*1, #(3.0, 1.0)
		+J_B_x*(B[1] - B[2])/2.0*2 +J_B_x*(B[3] - B[2])/2.0*2 +J_B_y*(B[18] - B[2])/1.5*1 +J_B_y*(B[19] - B[2])/1.5*1, #(5.0, 1.0)
		+J_B_x*(B[2] - B[3])/2.0*2 +J_B_x*(B[4] - B[3])/2.0*2 +J_B_y*(B[20] - B[3])/1.5*1 +J_B_y*(B[21] - B[3])/1.5*1, #(7.0, 1.0)
		+J_B_x*(B[3] - B[4])/2.0*2 +J_B_y*(B[6] - B[4])/2.0*2, #(9.0, 1.0)
		+J_B_y*(B[0] - B[5])/2.0*2 +J_B_x*(B[16] - B[5])/1.5*1 +J_B_x*(B[22] - B[5])/1.5*1 +J_B_y*(B[7] - B[5])/2.0*2, #(1.0, 3.0)
		+J_B_y*(B[4] - B[6])/2.0*2 +J_B_x*(B[21] - B[6])/1.5*1 +J_B_x*(B[23] - B[6])/1.5*1 +J_B_y*(B[8] - B[6])/2.0*2, #(9.0, 3.0)
		+J_B_y*(B[5] - B[7])/2.0*2 +J_B_x*(B[24] - B[7])/1.5*1 +J_B_x*(B[26] - B[7])/1.5*1 +J_B_y*(B[9] - B[7])/2.0*2, #(1.0, 5.0)
		+J_B_y*(B[6] - B[8])/2.0*2 +J_B_x*(B[25] - B[8])/1.5*1 +J_B_x*(B[27] - B[8])/1.5*1 +J_B_y*(B[10] - B[8])/2.0*2, #(9.0, 5.0)
		+J_B_y*(B[7] - B[9])/2.0*2 +J_B_x*(B[28] - B[9])/1.5*1 +J_B_x*(B[30] - B[9])/1.5*1 +J_B_y*(B[11] - B[9])/2.0*2, #(1.0, 7.0)
		+J_B_y*(B[8] - B[10])/2.0*2 +J_B_x*(B[29] - B[10])/1.5*1 +J_B_x*(B[35] - B[10])/1.5*1 +J_B_y*(B[15] - B[10])/2.0*2, #(9.0, 7.0)
		+J_B_y*(B[9] - B[11])/2.0*2 +J_B_x*(B[12] - B[11])/2.0*2, #(1.0, 9.0)
		+J_B_y*(B[30] - B[12])/1.5*1 +J_B_y*(B[31] - B[12])/1.5*1 +J_B_x*(B[11] - B[12])/2.0*2 +J_B_x*(B[13] - B[12])/2.0*2, #(3.0, 9.0)
		+J_B_y*(B[32] - B[13])/1.5*1 +J_B_y*(B[33] - B[13])/1.5*1 +J_B_x*(B[12] - B[13])/2.0*2 +J_B_x*(B[14] - B[13])/2.0*2, #(5.0, 9.0)
		+J_B_y*(B[34] - B[14])/1.5*1 +J_B_y*(B[35] - B[14])/1.5*1 +J_B_x*(B[13] - B[14])/2.0*2 +J_B_x*(B[15] - B[14])/2.0*2, #(7.0, 9.0)
		+J_B_y*(B[10] - B[15])/2.0*2 +J_B_x*(B[14] - B[15])/2.0*2, #(9.0, 9.0)
		+J_B_y*(B[1] - B[16])/1.5*1 +J_B_x*(B[5] - B[16])/1.5*1 +J_B_x*(B[17] - B[16])/1.0*1 +J_B_y*(B[22] - B[16])/1.0*1, #(2.5, 2.5)
		+J_B_y*(B[1] - B[17])/1.5*1 +J_B_x*(B[16] - B[17])/1.0*1 +J_B_x*(B[18] - B[17])/1.0*1 +J_B_y*(B[36] - B[17])/0.75*0.5 +J_B_y*(B[37] - B[17])/0.75*0.5, #(3.5, 2.5)
		+J_B_y*(B[2] - B[18])/1.5*1 +J_B_x*(B[17] - B[18])/1.0*1 +J_B_x*(B[19] - B[18])/1.0*1 +J_B_y*(B[38] - B[18])/0.75*0.5 +J_B_y*(B[39] - B[18])/0.75*0.5, #(4.5, 2.5)
		+J_B_y*(B[2] - B[19])/1.5*1 +J_B_x*(B[18] - B[19])/1.0*1 +J_B_x*(B[20] - B[19])/1.0*1 +J_B_y*(B[40] - B[19])/0.75*0.5 +J_B_y*(B[41] - B[19])/0.75*0.5, #(5.5, 2.5)
		+J_B_y*(B[3] - B[20])/1.5*1 +J_B_x*(B[19] - B[20])/1.0*1 +J_B_x*(B[21] - B[20])/1.0*1 +J_B_y*(B[42] - B[20])/0.75*0.5 +J_B_y*(B[43] - B[20])/0.75*0.5, #(6.5, 2.5)
		+J_B_y*(B[3] - B[21])/1.5*1 +J_B_x*(B[20] - B[21])/1.0*1 +J_B_x*(B[6] - B[21])/1.5*1 +J_B_y*(B[23] - B[21])/1.0*1, #(7.5, 2.5)
		+J_B_y*(B[16] - B[22])/1.0*1 +J_B_x*(B[5] - B[22])/1.5*1 +J_B_x*(B[36] - B[22])/0.75*0.5 +J_B_x*(B[44] - B[22])/0.75*0.5 +J_B_y*(B[24] - B[22])/1.0*1, #(2.5, 3.5)
		+J_B_y*(B[21] - B[23])/1.0*1 +J_B_x*(B[43] - B[23])/0.75*0.5 +J_B_x*(B[51] - B[23])/0.75*0.5 +J_B_x*(B[6] - B[23])/1.5*1 +J_B_y*(B[25] - B[23])/1.0*1, #(7.5, 3.5)
		+J_B_y*(B[22] - B[24])/1.0*1 +J_B_x*(B[7] - B[24])/1.5*1 +J_B_x*(B[52] - B[24])/0.75*0.5 +J_B_x*(B[60] - B[24])/0.75*0.5 +J_B_y*(B[26] - B[24])/1.0*1, #(2.5, 4.5)
		+J_B_y*(B[23] - B[25])/1.0*1 +J_B_x*(B[59] - B[25])/0.75*0.5 +J_B_x*(B[67] - B[25])/0.75*0.5 +J_B_x*(B[8] - B[25])/1.5*1 +J_B_y*(B[27] - B[25])/1.0*1, #(7.5, 4.5)
		+J_B_y*(B[24] - B[26])/1.0*1 +J_B_x*(B[7] - B[26])/1.5*1 +J_B_x*(B[68] - B[26])/0.75*0.5 +J_B_x*(B[76] - B[26])/0.75*0.5 +J_B_y*(B[28] - B[26])/1.0*1, #(2.5, 5.5)
		+J_B_y*(B[25] - B[27])/1.0*1 +J_B_x*(B[75] - B[27])/0.75*0.5 +J_B_x*(B[83] - B[27])/0.75*0.5 +J_B_x*(B[8] - B[27])/1.5*1 +J_B_y*(B[29] - B[27])/1.0*1, #(7.5, 5.5)
		+J_B_y*(B[26] - B[28])/1.0*1 +J_B_x*(B[9] - B[28])/1.5*1 +J_B_x*(B[84] - B[28])/0.75*0.5 +J_B_x*(B[92] - B[28])/0.75*0.5 +J_B_y*(B[30] - B[28])/1.0*1, #(2.5, 6.5)
		+J_B_y*(B[27] - B[29])/1.0*1 +J_B_x*(B[91] - B[29])/0.75*0.5 +J_B_x*(B[99] - B[29])/0.75*0.5 +J_B_x*(B[10] - B[29])/1.5*1 +J_B_y*(B[35] - B[29])/1.0*1, #(7.5, 6.5)
		+J_B_y*(B[28] - B[30])/1.0*1 +J_B_x*(B[9] - B[30])/1.5*1 +J_B_x*(B[31] - B[30])/1.0*1 +J_B_y*(B[12] - B[30])/1.5*1, #(2.5, 7.5)
		+J_B_y*(B[92] - B[31])/0.75*0.5 +J_B_y*(B[93] - B[31])/0.75*0.5 +J_B_x*(B[30] - B[31])/1.0*1 +J_B_x*(B[32] - B[31])/1.0*1 +J_B_y*(B[12] - B[31])/1.5*1, #(3.5, 7.5)
		+J_B_y*(B[94] - B[32])/0.75*0.5 +J_B_y*(B[95] - B[32])/0.75*0.5 +J_B_x*(B[31] - B[32])/1.0*1 +J_B_x*(B[33] - B[32])/1.0*1 +J_B_y*(B[13] - B[32])/1.5*1, #(4.5, 7.5)
		+J_B_y*(B[96] - B[33])/0.75*0.5 +J_B_y*(B[97] - B[33])/0.75*0.5 +J_B_x*(B[32] - B[33])/1.0*1 +J_B_x*(B[34] - B[33])/1.0*1 +J_B_y*(B[13] - B[33])/1.5*1, #(5.5, 7.5)
		+J_B_y*(B[98] - B[34])/0.75*0.5 +J_B_y*(B[99] - B[34])/0.75*0.5 +J_B_x*(B[33] - B[34])/1.0*1 +J_B_x*(B[35] - B[34])/1.0*1 +J_B_y*(B[14] - B[34])/1.5*1, #(6.5, 7.5)
		+J_B_y*(B[29] - B[35])/1.0*1 +J_B_x*(B[34] - B[35])/1.0*1 +J_B_x*(B[10] - B[35])/1.5*1 +J_B_y*(B[14] - B[35])/1.5*1, #(7.5, 7.5)
		+J_B_y*(B[17] - B[36])/0.75*0.5 +J_B_x*(B[22] - B[36])/0.75*0.5 +J_B_x*(B[37] - B[36])/0.5*0.5 +J_B_y*(B[44] - B[36])/0.5*0.5, #(3.25, 3.25)
		+J_B_y*(B[17] - B[37])/0.75*0.5 +J_B_x*(B[36] - B[37])/0.5*0.5 +J_B_x*(B[38] - B[37])/0.5*0.5 +J_B_y*(B[45] - B[37])/0.5*0.5, #(3.75, 3.25)
		+J_B_y*(B[18] - B[38])/0.75*0.5 +J_B_x*(B[37] - B[38])/0.5*0.5 +J_B_x*(B[39] - B[38])/0.5*0.5 +J_B_y*(B[46] - B[38])/0.5*0.5, #(4.25, 3.25)
		+J_B_y*(B[18] - B[39])/0.75*0.5 +J_B_x*(B[38] - B[39])/0.5*0.5 +J_B_x*(B[40] - B[39])/0.5*0.5 +J_B_y*(B[47] - B[39])/0.5*0.5, #(4.75, 3.25)
		+J_B_y*(B[19] - B[40])/0.75*0.5 +J_B_x*(B[39] - B[40])/0.5*0.5 +J_B_x*(B[41] - B[40])/0.5*0.5 +J_B_y*(B[48] - B[40])/0.5*0.5, #(5.25, 3.25)
		+J_B_y*(B[19] - B[41])/0.75*0.5 +J_B_x*(B[40] - B[41])/0.5*0.5 +J_B_x*(B[42] - B[41])/0.5*0.5 +J_B_y*(B[49] - B[41])/0.5*0.5, #(5.75, 3.25)
		+J_B_y*(B[20] - B[42])/0.75*0.5 +J_B_x*(B[41] - B[42])/0.5*0.5 +J_B_x*(B[43] - B[42])/0.5*0.5 +J_B_y*(B[50] - B[42])/0.5*0.5, #(6.25, 3.25)
		+J_B_y*(B[20] - B[43])/0.75*0.5 +J_B_x*(B[42] - B[43])/0.5*0.5 +J_B_x*(B[23] - B[43])/0.75*0.5 +J_B_y*(B[51] - B[43])/0.5*0.5, #(6.75, 3.25)
		+J_B_y*(B[36] - B[44])/0.5*0.5 +J_B_x*(B[22] - B[44])/0.75*0.5 +J_B_x*(B[45] - B[44])/0.5*0.5 +J_B_y*(B[52] - B[44])/0.5*0.5, #(3.25, 3.75)
		+J_B_y*(B[37] - B[45])/0.5*0.5 +J_B_x*(B[44] - B[45])/0.5*0.5 +J_B_x*(B[46] - B[45])/0.5*0.5 +J_B_y*(B[53] - B[45])/0.5*0.5, #(3.75, 3.75)
		+J_B_y*(B[38] - B[46])/0.5*0.5 +J_B_x*(B[45] - B[46])/0.5*0.5 +J_B_x*(B[47] - B[46])/0.5*0.5 +J_B_y*(B[54] - B[46])/0.5*0.5, #(4.25, 3.75)
		+J_B_y*(B[39] - B[47])/0.5*0.5 +J_B_x*(B[46] - B[47])/0.5*0.5 +J_B_x*(B[48] - B[47])/0.5*0.5, #(4.75, 3.75)
		+J_B_y*(B[40] - B[48])/0.5*0.5 +J_B_x*(B[47] - B[48])/0.5*0.5 +J_B_x*(B[49] - B[48])/0.5*0.5, #(5.25, 3.75)
		+J_B_y*(B[41] - B[49])/0.5*0.5 +J_B_x*(B[48] - B[49])/0.5*0.5 +J_B_x*(B[50] - B[49])/0.5*0.5 +J_B_y*(B[57] - B[49])/0.5*0.5, #(5.75, 3.75)
		+J_B_y*(B[42] - B[50])/0.5*0.5 +J_B_x*(B[49] - B[50])/0.5*0.5 +J_B_x*(B[51] - B[50])/0.5*0.5 +J_B_y*(B[58] - B[50])/0.5*0.5, #(6.25, 3.75)
		+J_B_y*(B[43] - B[51])/0.5*0.5 +J_B_x*(B[50] - B[51])/0.5*0.5 +J_B_x*(B[23] - B[51])/0.75*0.5 +J_B_y*(B[59] - B[51])/0.5*0.5, #(6.75, 3.75)
		+J_B_y*(B[44] - B[52])/0.5*0.5 +J_B_x*(B[24] - B[52])/0.75*0.5 +J_B_x*(B[53] - B[52])/0.5*0.5 +J_B_y*(B[60] - B[52])/0.5*0.5, #(3.25, 4.25)
		+J_B_y*(B[45] - B[53])/0.5*0.5 +J_B_x*(B[52] - B[53])/0.5*0.5 +J_B_x*(B[54] - B[53])/0.5*0.5 +J_B_y*(B[61] - B[53])/0.5*0.5, #(3.75, 4.25)
		+J_B_y*(B[46] - B[54])/0.5*0.5 +J_B_x*(B[53] - B[54])/0.5*0.5, #(4.25, 4.25)
		0, #(4.75, 4.25)
		0, #(5.25, 4.25)
		+J_B_y*(B[49] - B[57])/0.5*0.5 +J_B_x*(B[58] - B[57])/0.5*0.5, #(5.75, 4.25)
		+J_B_y*(B[50] - B[58])/0.5*0.5 +J_B_x*(B[57] - B[58])/0.5*0.5 +J_B_x*(B[59] - B[58])/0.5*0.5 +J_B_y*(B[66] - B[58])/0.5*0.5, #(6.25, 4.25)
		+J_B_y*(B[51] - B[59])/0.5*0.5 +J_B_x*(B[58] - B[59])/0.5*0.5 +J_B_x*(B[25] - B[59])/0.75*0.5 +J_B_y*(B[67] - B[59])/0.5*0.5, #(6.75, 4.25)
		+J_B_y*(B[52] - B[60])/0.5*0.5 +J_B_x*(B[24] - B[60])/0.75*0.5 +J_B_x*(B[61] - B[60])/0.5*0.5 +J_B_y*(B[68] - B[60])/0.5*0.5, #(3.25, 4.75)
		+J_B_y*(B[53] - B[61])/0.5*0.5 +J_B_x*(B[60] - B[61])/0.5*0.5 +J_B_y*(B[69] - B[61])/0.5*0.5, #(3.75, 4.75)
		0, #(4.25, 4.75)
		0, #(4.75, 4.75)
		0, #(5.25, 4.75)
		0, #(5.75, 4.75)
		+J_B_y*(B[58] - B[66])/0.5*0.5 +J_B_x*(B[67] - B[66])/0.5*0.5 +J_B_y*(B[74] - B[66])/0.5*0.5, #(6.25, 4.75)
		+J_B_y*(B[59] - B[67])/0.5*0.5 +J_B_x*(B[66] - B[67])/0.5*0.5 +J_B_x*(B[25] - B[67])/0.75*0.5 +J_B_y*(B[75] - B[67])/0.5*0.5, #(6.75, 4.75)
		+J_B_y*(B[60] - B[68])/0.5*0.5 +J_B_x*(B[26] - B[68])/0.75*0.5 +J_B_x*(B[69] - B[68])/0.5*0.5 +J_B_y*(B[76] - B[68])/0.5*0.5, #(3.25, 5.25)
		+J_B_y*(B[61] - B[69])/0.5*0.5 +J_B_x*(B[68] - B[69])/0.5*0.5 +J_B_y*(B[77] - B[69])/0.5*0.5, #(3.75, 5.25)
		0, #(4.25, 5.25)
		0, #(4.75, 5.25)
		0, #(5.25, 5.25)
		0, #(5.75, 5.25)
		+J_B_y*(B[66] - B[74])/0.5*0.5 +J_B_x*(B[75] - B[74])/0.5*0.5 +J_B_y*(B[82] - B[74])/0.5*0.5, #(6.25, 5.25)
		+J_B_y*(B[67] - B[75])/0.5*0.5 +J_B_x*(B[74] - B[75])/0.5*0.5 +J_B_x*(B[27] - B[75])/0.75*0.5 +J_B_y*(B[83] - B[75])/0.5*0.5, #(6.75, 5.25)
		+J_B_y*(B[68] - B[76])/0.5*0.5 +J_B_x*(B[26] - B[76])/0.75*0.5 +J_B_x*(B[77] - B[76])/0.5*0.5 +J_B_y*(B[84] - B[76])/0.5*0.5, #(3.25, 5.75)
		+J_B_y*(B[69] - B[77])/0.5*0.5 +J_B_x*(B[76] - B[77])/0.5*0.5 +J_B_x*(B[78] - B[77])/0.5*0.5 +J_B_y*(B[85] - B[77])/0.5*0.5, #(3.75, 5.75)
		+J_B_x*(B[77] - B[78])/0.5*0.5 +J_B_y*(B[86] - B[78])/0.5*0.5, #(4.25, 5.75)
		0, #(4.75, 5.75)
		0, #(5.25, 5.75)
		+J_B_x*(B[82] - B[81])/0.5*0.5 +J_B_y*(B[89] - B[81])/0.5*0.5, #(5.75, 5.75)
		+J_B_y*(B[74] - B[82])/0.5*0.5 +J_B_x*(B[81] - B[82])/0.5*0.5 +J_B_x*(B[83] - B[82])/0.5*0.5 +J_B_y*(B[90] - B[82])/0.5*0.5, #(6.25, 5.75)
		+J_B_y*(B[75] - B[83])/0.5*0.5 +J_B_x*(B[82] - B[83])/0.5*0.5 +J_B_x*(B[27] - B[83])/0.75*0.5 +J_B_y*(B[91] - B[83])/0.5*0.5, #(6.75, 5.75)
		+J_B_y*(B[76] - B[84])/0.5*0.5 +J_B_x*(B[28] - B[84])/0.75*0.5 +J_B_x*(B[85] - B[84])/0.5*0.5 +J_B_y*(B[92] - B[84])/0.5*0.5, #(3.25, 6.25)
		+J_B_y*(B[77] - B[85])/0.5*0.5 +J_B_x*(B[84] - B[85])/0.5*0.5 +J_B_x*(B[86] - B[85])/0.5*0.5 +J_B_y*(B[93] - B[85])/0.5*0.5, #(3.75, 6.25)
		+J_B_y*(B[78] - B[86])/0.5*0.5 +J_B_x*(B[85] - B[86])/0.5*0.5 +J_B_x*(B[87] - B[86])/0.5*0.5 +J_B_y*(B[94] - B[86])/0.5*0.5, #(4.25, 6.25)
		+J_B_x*(B[86] - B[87])/0.5*0.5 +J_B_x*(B[88] - B[87])/0.5*0.5 +J_B_y*(B[95] - B[87])/0.5*0.5, #(4.75, 6.25)
		+J_B_x*(B[87] - B[88])/0.5*0.5 +J_B_x*(B[89] - B[88])/0.5*0.5 +J_B_y*(B[96] - B[88])/0.5*0.5, #(5.25, 6.25)
		+J_B_y*(B[81] - B[89])/0.5*0.5 +J_B_x*(B[88] - B[89])/0.5*0.5 +J_B_x*(B[90] - B[89])/0.5*0.5 +J_B_y*(B[97] - B[89])/0.5*0.5, #(5.75, 6.25)
		+J_B_y*(B[82] - B[90])/0.5*0.5 +J_B_x*(B[89] - B[90])/0.5*0.5 +J_B_x*(B[91] - B[90])/0.5*0.5 +J_B_y*(B[98] - B[90])/0.5*0.5, #(6.25, 6.25)
		+J_B_y*(B[83] - B[91])/0.5*0.5 +J_B_x*(B[90] - B[91])/0.5*0.5 +J_B_x*(B[29] - B[91])/0.75*0.5 +J_B_y*(B[99] - B[91])/0.5*0.5, #(6.75, 6.25)
		+J_B_y*(B[84] - B[92])/0.5*0.5 +J_B_x*(B[28] - B[92])/0.75*0.5 +J_B_x*(B[93] - B[92])/0.5*0.5 +J_B_y*(B[31] - B[92])/0.75*0.5, #(3.25, 6.75)
		+J_B_y*(B[85] - B[93])/0.5*0.5 +J_B_x*(B[92] - B[93])/0.5*0.5 +J_B_x*(B[94] - B[93])/0.5*0.5 +J_B_y*(B[31] - B[93])/0.75*0.5, #(3.75, 6.75)
		+J_B_y*(B[86] - B[94])/0.5*0.5 +J_B_x*(B[93] - B[94])/0.5*0.5 +J_B_x*(B[95] - B[94])/0.5*0.5 +J_B_y*(B[32] - B[94])/0.75*0.5, #(4.25, 6.75)
		+J_B_y*(B[87] - B[95])/0.5*0.5 +J_B_x*(B[94] - B[95])/0.5*0.5 +J_B_x*(B[96] - B[95])/0.5*0.5 +J_B_y*(B[32] - B[95])/0.75*0.5, #(4.75, 6.75)
		+J_B_y*(B[88] - B[96])/0.5*0.5 +J_B_x*(B[95] - B[96])/0.5*0.5 +J_B_x*(B[97] - B[96])/0.5*0.5 +J_B_y*(B[33] - B[96])/0.75*0.5, #(5.25, 6.75)
		+J_B_y*(B[89] - B[97])/0.5*0.5 +J_B_x*(B[96] - B[97])/0.5*0.5 +J_B_x*(B[98] - B[97])/0.5*0.5 +J_B_y*(B[33] - B[97])/0.75*0.5, #(5.75, 6.75)
		+J_B_y*(B[90] - B[98])/0.5*0.5 +J_B_x*(B[97] - B[98])/0.5*0.5 +J_B_x*(B[99] - B[98])/0.5*0.5 +J_B_y*(B[34] - B[98])/0.75*0.5, #(6.25, 6.75)
		+J_B_y*(B[91] - B[99])/0.5*0.5 +J_B_x*(B[98] - B[99])/0.5*0.5 +J_B_x*(B[29] - B[99])/0.75*0.5 +J_B_y*(B[34] - B[99])/0.75*0.5, #(6.75, 6.75)
		])


	#Transfer Reactions
	_tr_H = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		-1*(k_synB*H[55]*A[55] - k_synH_A*B[47]*1) -1*(k_synB*H[55]*A[55] - k_synH_A*B[54]*1), #(4.75, 4.25)
		-1*(k_synB*H[56]*A[56] - k_synH_A*B[48]*1) -1*(k_synB*H[56]*A[56] - k_synH_A*B[57]*1), #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		-1*(k_synB*H[62]*A[62] - k_synH_A*B[54]*1) -1*(k_synB*H[62]*A[62] - k_synH_A*B[61]*1), #(4.25, 4.75)
		0, #(4.75, 4.75)
		0, #(5.25, 4.75)
		-1*(k_synB*H[65]*A[65] - k_synH_A*B[57]*1) -1*(k_synB*H[65]*A[65] - k_synH_A*B[66]*1), #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		-1*(k_synB*H[70]*A[70] - k_synH_A*B[69]*1) -1*(k_synB*H[70]*A[70] - k_synH_A*B[78]*1), #(4.25, 5.25)
		0, #(4.75, 5.25)
		0, #(5.25, 5.25)
		-1*(k_synB*H[73]*A[73] - k_synH_A*B[74]*1) -1*(k_synB*H[73]*A[73] - k_synH_A*B[81]*1), #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		-1*(k_synB*H[79]*A[79] - k_synH_A*B[78]*1) -1*(k_synB*H[79]*A[79] - k_synH_A*B[87]*1), #(4.75, 5.75)
		-1*(k_synB*H[80]*A[80] - k_synH_A*B[81]*1) -1*(k_synB*H[80]*A[80] - k_synH_A*B[88]*1), #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_tr_A = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		0, #(4.75, 3.75)
		0, #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		0, #(4.25, 4.25)
		-1*(k_synB*H[55]*A[55] - k_synH_A*B[47]*1) -1*(k_synB*H[55]*A[55] - k_synH_A*B[54]*1), #(4.75, 4.25)
		-1*(k_synB*H[56]*A[56] - k_synH_A*B[48]*1) -1*(k_synB*H[56]*A[56] - k_synH_A*B[57]*1), #(5.25, 4.25)
		0, #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		0, #(3.75, 4.75)
		-1*(k_synB*H[62]*A[62] - k_synH_A*B[54]*1) -1*(k_synB*H[62]*A[62] - k_synH_A*B[61]*1), #(4.25, 4.75)
		0, #(4.75, 4.75)
		0, #(5.25, 4.75)
		-1*(k_synB*H[65]*A[65] - k_synH_A*B[57]*1) -1*(k_synB*H[65]*A[65] - k_synH_A*B[66]*1), #(5.75, 4.75)
		0, #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		0, #(3.75, 5.25)
		-1*(k_synB*H[70]*A[70] - k_synH_A*B[69]*1) -1*(k_synB*H[70]*A[70] - k_synH_A*B[78]*1), #(4.25, 5.25)
		0, #(4.75, 5.25)
		0, #(5.25, 5.25)
		-1*(k_synB*H[73]*A[73] - k_synH_A*B[74]*1) -1*(k_synB*H[73]*A[73] - k_synH_A*B[81]*1), #(5.75, 5.25)
		0, #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		0, #(4.25, 5.75)
		-1*(k_synB*H[79]*A[79] - k_synH_A*B[78]*1) -1*(k_synB*H[79]*A[79] - k_synH_A*B[87]*1), #(4.75, 5.75)
		-1*(k_synB*H[80]*A[80] - k_synH_A*B[81]*1) -1*(k_synB*H[80]*A[80] - k_synH_A*B[88]*1), #(5.25, 5.75)
		0, #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		0, #(4.75, 6.25)
		0, #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])

	_tr_B = __np.array([
		0, #(1.0, 1.0)
		0, #(3.0, 1.0)
		0, #(5.0, 1.0)
		0, #(7.0, 1.0)
		0, #(9.0, 1.0)
		0, #(1.0, 3.0)
		0, #(9.0, 3.0)
		0, #(1.0, 5.0)
		0, #(9.0, 5.0)
		0, #(1.0, 7.0)
		0, #(9.0, 7.0)
		0, #(1.0, 9.0)
		0, #(3.0, 9.0)
		0, #(5.0, 9.0)
		0, #(7.0, 9.0)
		0, #(9.0, 9.0)
		0, #(2.5, 2.5)
		0, #(3.5, 2.5)
		0, #(4.5, 2.5)
		0, #(5.5, 2.5)
		0, #(6.5, 2.5)
		0, #(7.5, 2.5)
		0, #(2.5, 3.5)
		0, #(7.5, 3.5)
		0, #(2.5, 4.5)
		0, #(7.5, 4.5)
		0, #(2.5, 5.5)
		0, #(7.5, 5.5)
		0, #(2.5, 6.5)
		0, #(7.5, 6.5)
		0, #(2.5, 7.5)
		0, #(3.5, 7.5)
		0, #(4.5, 7.5)
		0, #(5.5, 7.5)
		0, #(6.5, 7.5)
		0, #(7.5, 7.5)
		0, #(3.25, 3.25)
		0, #(3.75, 3.25)
		0, #(4.25, 3.25)
		0, #(4.75, 3.25)
		0, #(5.25, 3.25)
		0, #(5.75, 3.25)
		0, #(6.25, 3.25)
		0, #(6.75, 3.25)
		0, #(3.25, 3.75)
		0, #(3.75, 3.75)
		0, #(4.25, 3.75)
		+1*(k_synB*H[55]*A[55] - k_synH_A*B[47]*1), #(4.75, 3.75)
		+1*(k_synB*H[56]*A[56] - k_synH_A*B[48]*1), #(5.25, 3.75)
		0, #(5.75, 3.75)
		0, #(6.25, 3.75)
		0, #(6.75, 3.75)
		0, #(3.25, 4.25)
		0, #(3.75, 4.25)
		+1*(k_synB*H[55]*A[55] - k_synH_A*B[54]*1) +1*(k_synB*H[62]*A[62] - k_synH_A*B[54]*1), #(4.25, 4.25)
		0, #(4.75, 4.25)
		0, #(5.25, 4.25)
		+1*(k_synB*H[56]*A[56] - k_synH_A*B[57]*1) +1*(k_synB*H[65]*A[65] - k_synH_A*B[57]*1), #(5.75, 4.25)
		0, #(6.25, 4.25)
		0, #(6.75, 4.25)
		0, #(3.25, 4.75)
		+1*(k_synB*H[62]*A[62] - k_synH_A*B[61]*1), #(3.75, 4.75)
		0, #(4.25, 4.75)
		0, #(4.75, 4.75)
		0, #(5.25, 4.75)
		0, #(5.75, 4.75)
		+1*(k_synB*H[65]*A[65] - k_synH_A*B[66]*1), #(6.25, 4.75)
		0, #(6.75, 4.75)
		0, #(3.25, 5.25)
		+1*(k_synB*H[70]*A[70] - k_synH_A*B[69]*1), #(3.75, 5.25)
		0, #(4.25, 5.25)
		0, #(4.75, 5.25)
		0, #(5.25, 5.25)
		0, #(5.75, 5.25)
		+1*(k_synB*H[73]*A[73] - k_synH_A*B[74]*1), #(6.25, 5.25)
		0, #(6.75, 5.25)
		0, #(3.25, 5.75)
		0, #(3.75, 5.75)
		+1*(k_synB*H[70]*A[70] - k_synH_A*B[78]*1) +1*(k_synB*H[79]*A[79] - k_synH_A*B[78]*1), #(4.25, 5.75)
		0, #(4.75, 5.75)
		0, #(5.25, 5.75)
		+1*(k_synB*H[73]*A[73] - k_synH_A*B[81]*1) +1*(k_synB*H[80]*A[80] - k_synH_A*B[81]*1), #(5.75, 5.75)
		0, #(6.25, 5.75)
		0, #(6.75, 5.75)
		0, #(3.25, 6.25)
		0, #(3.75, 6.25)
		0, #(4.25, 6.25)
		+1*(k_synB*H[79]*A[79] - k_synH_A*B[87]*1), #(4.75, 6.25)
		+1*(k_synB*H[80]*A[80] - k_synH_A*B[88]*1), #(5.25, 6.25)
		0, #(5.75, 6.25)
		0, #(6.25, 6.25)
		0, #(6.75, 6.25)
		0, #(3.25, 6.75)
		0, #(3.75, 6.75)
		0, #(4.25, 6.75)
		0, #(4.75, 6.75)
		0, #(5.25, 6.75)
		0, #(5.75, 6.75)
		0, #(6.25, 6.75)
		0, #(6.75, 6.75)
		])


	#Non-rate differentials
	_d_H = _adv_H + _dfn_H +__tr_H +1*synH
	_d_A = _adv_A + _dfn_A +__tr_A 
	_d_B = _adv_B + _dfn_B +__tr_B 

	#Apply boundary conditions
	_d_B[0] = 0 #(1.0, 1.0), Dirichlet
	_d_B[1] = 0 #(3.0, 1.0), Dirichlet
	_d_B[2] = 0 #(5.0, 1.0), Dirichlet
	_d_B[3] = 0 #(7.0, 1.0), Dirichlet
	_d_B[4] = 0 #(9.0, 1.0), Dirichlet
	_d_B[5] = -0.05 #(1.0, 3.0), Neumann
	_d_B[6] = -0.05 #(9.0, 3.0), Neumann
	_d_B[7] = -0.05 #(1.0, 5.0), Neumann
	_d_B[8] = -0.05 #(9.0, 5.0), Neumann
	_d_B[9] = -0.05 #(1.0, 7.0), Neumann
	_d_B[10] = -0.05 #(9.0, 7.0), Neumann
	_d_B[11] = 0 #(1.0, 9.0), Dirichlet
	_d_B[12] = 0 #(3.0, 9.0), Dirichlet
	_d_B[13] = 0 #(5.0, 9.0), Dirichlet
	_d_B[14] = 0 #(7.0, 9.0), Dirichlet
	_d_B[15] = 0 #(9.0, 9.0), Dirichlet
	_d_B[47] = 0 #(4.75, 3.75), Dirichlet
	_d_B[48] = 0 #(5.25, 3.75), Dirichlet
	_d_B[54] = 0 #(4.25, 4.25), Dirichlet
	_d_A[55] = 0 #(4.75, 4.25), Inferred Neumann
	_d_H[55] = 0 #(4.75, 4.25), Inferred Neumann
	_d_A[56] = 0 #(5.25, 4.25), Inferred Neumann
	_d_H[56] = 0 #(5.25, 4.25), Inferred Neumann
	_d_B[57] = 0 #(5.75, 4.25), Dirichlet
	_d_B[61] = -0.05 #(3.75, 4.75), Neumann
	_d_A[62] = 0 #(4.25, 4.75), Inferred Neumann
	_d_H[62] = 0 #(4.25, 4.75), Inferred Neumann
	_d_A[65] = 0 #(5.75, 4.75), Inferred Neumann
	_d_H[65] = 0 #(5.75, 4.75), Inferred Neumann
	_d_B[66] = -0.05 #(6.25, 4.75), Neumann
	_d_B[69] = -0.05 #(3.75, 5.25), Neumann
	_d_A[70] = 0 #(4.25, 5.25), Inferred Neumann
	_d_H[70] = 0 #(4.25, 5.25), Inferred Neumann
	_d_A[73] = 0 #(5.75, 5.25), Inferred Neumann
	_d_H[73] = 0 #(5.75, 5.25), Inferred Neumann
	_d_B[74] = -0.05 #(6.25, 5.25), Neumann
	_d_B[78] = 0 #(4.25, 5.75), Dirichlet
	_d_A[79] = 0 #(4.75, 5.75), Inferred Neumann
	_d_H[79] = 0 #(4.75, 5.75), Inferred Neumann
	_d_A[80] = 0 #(5.25, 5.75), Inferred Neumann
	_d_H[80] = 0 #(5.25, 5.75), Inferred Neumann
	_d_B[81] = 0 #(5.75, 5.75), Dirichlet
	_d_B[87] = 0 #(4.75, 6.25), Dirichlet
	_d_B[88] = 0 #(5.25, 6.25), Dirichlet

	return __np.concatenate((_d_H, _d_A, _d_B, _d_C))