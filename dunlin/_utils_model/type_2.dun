`model_1

``params
Jx : [5e-4]
Jy : [5e-2]

``functions
MM(v, x, k) : v*x/(x + k)

``events
change_Jy : [trigger: y0 <= y1, assign: [Jy = 5.5e-2, Jx = 1e-4], delay: None, persistent: True] 

``tspan
s0 : [linspace, 0, 500, 31]
s1 : [linspace, 0, 500, 31]
s2 : [linspace, 0, 500, 31]
s3 : [linspace, 0, 500, 31]

``states
x{} : [s0 : {}, s1 : {}, s2 : {}]
	~0, 1, 1.01, 0.99
	~1, 1, 0.95, 0.98
	~2, 1, 0.96, 1.04,
	~3, 1, 1,    1.01,
	~4, 1, 0.99, 0.97
	
y0 : [1, 1.02, 1.01]
y1 : [1, 1.1,  1.04]
y2 : [1, 1,    0.95]
y3 : [1, 0.98, 0.99]
y4 : [1, 0.9,  1.03]

``variables
gradx_{i}_{ii} : x{i} - x{ii}
	~i,  0, 4, 1
	~ii, 1, 5, 1
grady_0_1 : y0 - y1
grady_1_2 : y1 - y2
grady_2_3 : y2 - y3
grady_3_4 : y3 - y4

``reactions
diffx_{i}_{i+1} : [stoich : x{i} > x{i+1}, fwd : Jx*gradx_{i}_{i+1}, rev : None]
	~i, 0, 4 
diffy_0_1 : [y0 > y1, Jy*grady_y0_y1]
diffy_1_2 : [y1 > y2, Jy*grady_y1_y2]
diffy_2_3 : [y2 > y3, Jy*grady_y2_y3]
diffy_3_4 : [y3 > y4, Jy*grady_y3_y4]

;To do: Come up with format for list generation
``compartments
c0 : [size: 10, contains: [<x{i}, y{i}>]]
	!i, 0, 5, 1

``exvs
y40 : a=1
	#The algorithm must fix the indentation of the line above
	
	#Calculate the value at the 40% mark
	index = np.argmax(t > 0.4*500)
	
	@line _y{} = y{}[index] 
	~0, 0
	~1, 1
	~2, 2
	~3, 3
	~4, 4
	
	return np.array([y0, y1, y2, y3])

y80 : a
	index = np.argmax(t > 0.8*500)
	
	@line _y{i} = y{i}[index] 
	~i, 0, 4
	
	return np.array([y0, y1, y2, y3])

x40:
	index = np.argmax(t > 0.8*500)
	
	@line _x{i} = x{i}[index] 
	~i, 0, 5
	
	;Tentative format for list generation
	@line return np.array([<x{}>])
	!0 !1 !2 !3 !4