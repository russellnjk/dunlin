[model_1]
; A 5 compartment model containing x and y.
; x and y can diffuse between components.
; x induces synthesis of y and itself.
; y represses synthesis of x and itself.
states = 
	x0 = [1, 1,    0.9],
	x1 = [1, 1.05, 1.01],
	x2 = [1, 1,    0.96],
	x3 = [1, 0.93, 0.98],
	x4 = [1, 1.04, 1.1],
	y0 = [1, 1.02, 1.01],
	y1 = [1, 1.1,  1.04],
	y2 = [1, 1,    0.95],
	y3 = [1, 0.98, 0.99],
	y4 = [1, 0.9,  1.03]

params = 
	Jx   = [5e-4],
	Jy   = [5e-2],
	synx = [8e-2],
	syny = [8e-2],
	degx = [5e-2],
	degy = [5e-2],
	kx   = [5e-1]
	
equations = 
	@use_numba 
	
	@short x{} = x{}-x{}: 0_1, 1_2, 2_3, 3_4: 1, 2, 3, 4: 0, 1, 2, 3
	
	dx0 = Jx*x0_1           + synx*x0**2/(y0**2 + kx**2) - degx*x0
	dx1 = Jx*x1_2 - Jx*x0_1 + synx*x1**2/(y1**2 + kx**2) - degx*x1
	dx2 = Jx*x2_3 - Jx*x1_2 + synx*x2**2/(y2**2 + kx**2) - degx*x2
	dx3 = Jx*x3_4 - Jx*x2_3 + synx*x3**2/(y3**2 + kx**2) - degx*x3
	dx4 =         - Jx*x3_4 + synx*x4**2/(y4**2 + kx**2) - degx*x4
	
	@short y{} = y{}-y{}: 0_1, 1_2, 2_3, 3_4: 1, 2, 3, 4: 0, 1, 2, 3
	
	dy0 = Jy*y0_1           + syny*x0**2/(y0**2 + kx**2) - degy*y0
	dy1 = Jy*y1_2 - Jy*y0_1 + syny*x1**2/(y1**2 + kx**2) - degy*y1
	dy2 = Jy*y2_3 - Jy*y1_2 + syny*x2**2/(y2**2 + kx**2) - degy*y2
	dy3 = Jy*y3_4 - Jy*y2_3 + syny*x3**2/(y3**2 + kx**2) - degy*y3
	dy4 =         - Jy*y3_4 + syny*x4**2/(y4**2 + kx**2) - degy*y4

tspan = 
	linspace(0, 5000, 21)

exv_cx_0 =
	index = 0
	
	@short _x{} = x{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_x{}, _x{}, _x{}, _x{}, _x{}] : 0: 1: 2: 3: 4
	
exv_cx_20 =
	index = np.argmax(t > 0.2*500)
	
	@short _x{} = x{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_x{}, _x{}, _x{}, _x{}, _x{}] : 0: 1: 2: 3: 4
	
exv_cx_40 =
	index = np.argmax(t > 0.4*500)
	
	@short _x{} = x{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_x{}, _x{}, _x{}, _x{}, _x{}] : 0: 1: 2: 3: 4
	
exv_cx_final =
	index = -1
	
	@short _x{} = x{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_x{}, _x{}, _x{}, _x{}, _x{}] : 0: 1: 2: 3: 4

exv_cy_0 =
	index = 0
	
	@short _y{} = y{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_y{}, _y{}, _y{}, _y{}, _y{}] : 0: 1: 2: 3: 4
	
exv_cy_20 =
	index = np.argmax(t > 0.2*500)
	
	@short _y{} = y{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_y{}, _y{}, _y{}, _y{}, _y{}] : 0: 1: 2: 3: 4
	
exv_cy_40 =
	index = np.argmax(t > 0.4*500)
	
	@short _y{} = y{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_y{}, _y{}, _y{}, _y{}, _y{}] : 0: 1: 2: 3: 4
	
exv_cy_final =
	index = -1
	
	@short _y{} = y{}[index]: 0, 1, 2, 3, 4: 0, 1, 2, 3, 4
	@short return [0, 1, 2, 3, 4], [_y{}, _y{}, _y{}, _y{}, _y{}] : 0: 1: 2: 3: 4