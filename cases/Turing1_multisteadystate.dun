`M1
; A 5 compartment model containing x and y.
; x and y can diffuse between components.
; x induces synthesis of y and itself.
; y represses synthesis of x and itself.
``states
x0 : [s0: 1, s1: 1,    s2: 0.9]
x1 : [s0: 1, s1: 1.05, s2: 1.01]
x2 : [s0: 1, s1: 1,    s2: 0.96]
x3 : [s0: 1, s1: 0.93, s2: 0.98]
x4 : [s0: 1, s1: 1.04, s2: 1.1]
y0 : [s0: 1, s1: 1.02, s2: 1.01]
y1 : [s0: 1, s1: 1.1,  s2: 1.04]
y2 : [s0: 1, s1: 1,    s2: 0.95]
y3 : [s0: 1, s1: 0.98, s2: 0.99]
y4 : [s0: 1, s1: 0.9,  s2: 1.03]

``params
Jx   : [0: 5e-4]
Jy   : [0: 5e-2]
synx : [0: 8e-2]
syny : [0: 8e-2]
degx : [0: 5e-2]
degy : [0: 5e-2]
kx   : [0: 5e-1]

``variables
x0_1 : x1-x0
x1_2 : x2-x1
x2_3 : x3-x2
x3_4 : x4-x3
y0_1 : y1-y0
y1_2 : y2-y1
y2_3 : y3-y2
y3_4 : y4-y3

``rates
x0 : Jx*x0_1           + synx*x0**2/(y0**2 + kx**2) - degx*x0
x1 : Jx*x1_2 - Jx*x0_1 + synx*x1**2/(y1**2 + kx**2) - degx*x1
x2 : Jx*x2_3 - Jx*x1_2 + synx*x2**2/(y2**2 + kx**2) - degx*x2
x3 : Jx*x3_4 - Jx*x2_3 + synx*x3**2/(y3**2 + kx**2) - degx*x3
x4 :         - Jx*x3_4 + synx*x4**2/(y4**2 + kx**2) - degx*x4
y0 : Jy*y0_1           + syny*x0**2/(y0**2 + kx**2) - degy*y0
y1 : Jy*y1_2 - Jy*y0_1 + syny*x1**2/(y1**2 + kx**2) - degy*y1
y2 : Jy*y2_3 - Jy*y1_2 + syny*x2**2/(y2**2 + kx**2) - degy*y2
y3 : Jy*y3_4 - Jy*y2_3 + syny*x3**2/(y3**2 + kx**2) - degy*y3
y4 :         - Jy*y3_4 + syny*x4**2/(y4**2 + kx**2) - degy*y4

``tspan
s0: [linspace(0, 5000, 21)]
s1: [linspace(0, 5000, 21)]
s2: [linspace(0, 5000, 21)]

``exvs
exv_cx_0 :
	index = 0
	
	_x0 = x0[index] 
	_x1 = x1[index] 
	_x2 = x2[index] 
	_x3 = x3[index] 
	_x4 = x4[index] 
	
	return [0, 1, 2, 3, 4], [_x0, _x1, _x2, _x3, _x4]
	
exv_cx_20 :
	index = np.argmax(t > 0.2*500)
	
	_x0 = x0[index] 
	_x1 = x1[index] 
	_x2 = x2[index] 
	_x3 = x3[index] 
	_x4 = x4[index] 
	
	return [0, 1, 2, 3, 4], [_x0, _x1, _x2, _x3, _x4]
	
exv_cx_40 :
	index = np.argmax(t > 0.4*500)
	
	_x0 = x0[index] 
	_x1 = x1[index] 
	_x2 = x2[index] 
	_x3 = x3[index] 
	_x4 = x4[index] 
	
	return [0, 1, 2, 3, 4], [_x0, _x1, _x2, _x3, _x4]
	
exv_cx_final :
	_x0 = x0[-1] 
	_x1 = x1[-1] 
	_x2 = x2[-1] 
	_x3 = x3[-1] 
	_x4 = x4[-1] 
	
	return [0, 1, 2, 3, 4], [_x0, _x1, _x2, _x3, _x4]

exv_cy_0 :
	index = 0
	
	_y0 = y0[index] 
	_y1 = y1[index] 
	_y2 = y2[index] 
	_y3 = y3[index] 
	_y4 = y4[index] 
	
	return [0, 1, 2, 3, 4], [_y0, _y1, _y2, _y3, _y4]
	
exv_cy_20 :
	index = np.argmax(t > 0.2*500)
	
	_y0 = y0[index] 
	_y1 = y1[index] 
	_y2 = y2[index] 
	_y3 = y3[index] 
	_y4 = y4[index] 
	
	return [0, 1, 2, 3, 4], [_y0, _y1, _y2, _y3, _y4]
	
exv_cy_40 :
	index = np.argmax(t > 0.4*500)
	
	_y0 = y0[index] 
	_y1 = y1[index] 
	_y2 = y2[index] 
	_y3 = y3[index] 
	_y4 = y4[index] 
	
	return [0, 1, 2, 3, 4], [_y0, _y1, _y2, _y3, _y4]
	
exv_cy_final :
	_y0 = y0[-1] 
	_y1 = y1[-1] 
	_y2 = y2[-1] 
	_y3 = y3[-1] 
	_y4 = y4[-1] 
	
	return [0, 1, 2, 3, 4], [_y0, _y1, _y2, _y3, _y4]

``sim_args
line_args: [
	color: [
		s0: [0: coral], 
		s1: ocean,
		s2: cobalt
		]
	]